name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Linting
        run: cargo clippy --all-features --all-targets -- -Dwarnings

  test:
    name: Test
    runs-on: ubuntu-latest
    #services:
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test --all-features --all-targets

  docker-release:
    needs: [fmt, clippy, test]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - build_args: |
              BIN_NAME=broker-2-http
            app_name: broker-2-http
          - build_args: |
              BIN_NAME=http-2-broker
            app_name: http-2-broker

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.app_name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: ${{ matrix.build_args }}
          tags: |
            ghcr.io/INTERSECT-SDK/broker-http-proxy/${{ matrix.app_name }}:latest
            ghcr.io/INTERSECT-SDK/broker-http-proxy/${{ matrix.app_name }}:${{ github.sha }}
          push: true
